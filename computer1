#include <stdio.h>
#include <stdlib.h>

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <windows.h>

//the clock in the of the system should be used
//main menu
//load
//save

typedef struct {
      char name[25];
      char color;
      int score;
     }player;
player p1;
player comp ;


void computer() {
    int score1,score2,score3;
    //printf("Player(1) VS Player(2)\"")
    //play player1, player2, computer;
    //printf("Player(1) Name: ");
    //scanf("%c",player1.name);
    //printf("\n");
    //printf("Player(2) Name: ");
    //scanf("%c",player2.name);
    //printf("\n");
    //computer.name = 'Computer';
    //player1.color = 'Blue';
    //player2.color = 'Red';
    //computer.color = 'Red';
//    player1.score = score1;
//    player2.score = score2;
//    computer.score = score3;
    int player_points=0;
    int gamemode,n,m;
    printf("      Hello Gamer!\n");
    here :
    printf("(1) Choose Mode Of The Game\n");
    printf("   \" BEGINNER \" Press 1\n    \" EXPERT \"  Press 2\n");
    scanf("%d",&gamemode) ;
    fflush(stdin);
    if(gamemode==1){
        n = 5;
        m = 12;
    }
    else if(gamemode==2){
        n = 11 ;
        m = 60 ;
    }
    else{
        printf("Invalid Input\n");
        goto here ;
    }
    printf("\n");
    char gridArray[n][n];
    for (int i=0 ; i<n ; i++) {
        for(int j=0 ; j<n ; j++) {
            if (i%2 == 0 && j%2 == 0) {
                gridArray[i][j] = 254;
            }
            else if (i%2 == 0 && j%2 == 1) {
                gridArray[i][j] = ' ' ;
            }
            else if (i%2 == 1 && j%2 == 0) {
                gridArray[i][j] = ' ';
            }
            else if (i%2 == 1 && i%2 == 1){
                gridArray[i][j] = ' ';
            }
        }
    }
    system("cls");
    if (gamemode == 1) {
        printf("\t\t\t     0 1 2 3 4\n");
    }
    else if (gamemode == 2) {
        printf("\t\t\t     0 1 2 3 4 5 6 7 8 9 10\n");
    }
    for (int i=0 ; i<n ; i++) {
        if (i != 10) {
            printf("\t\t\t%d    ",i);
        }
        else if (i == 10) {
            printf("\t\t       %d    ",i);
        }
        for (int j=0 ; j<n ; j++) {
            printf("%c ",gridArray[i][j]);
        }
        printf("\n");
    }
    int count = 0;  // if count is even so its player1 turn if odd player 2 turn
    printf("\n");
    for(int i=0 ; i<m ; i++) {
        if(count % 2 == 0 ){
            printf("player 1 turn\n\n");
        }
        else{
            printf("Computer turn\n\n") ;
        }
        int r , c;
        if(count % 2 == 0){
        printf("Enter Row Then Column Of The Required Line [example: 0 3] --> ");
        scanf("%d %d",&r,&c);
        printf("\n");
        fflush(stdin);  //remove /n from input stream (stdin) FILE
        while((((r%2==0)&&(c%2==0))||((r%2==1)&&(c%2==1)))||(r>=n)||(c>=n) || (isalpha(r)) || (isalpha(c)) || (gridArray[r][c] == '|') || (gridArray[r][c] == '-') || r<0 || c<0 ){
            printf("Wrong input enter Row Then Column Of The Required Line [example: 0 3] --> ");
            scanf("%d %d",&r,&c);
            fflush(stdin);
        }
        for(int i=0 ; i<n ; i++ ) {
            for(int j=0 ; j<n ; j++) {
                if (r == i && c == j) {
                    if (i%2 == 0 && j%2 == 1) {
                        gridArray[r][c] = '-';
                    }
                    else if (i%2 == 1 && j%2 == 0) {
                        gridArray[r][c] = '|';
                    }
                }
            }
        }
        }
        else if(count % 2 == 1){ //computer plays random line

            do{       //loop until the computer draw a correct line
                r = rand() % n ;
                c = rand() % n ; //chooses ranodom r(row) and random c(column)

                //checks if its a true place to draw line
            }while( (gridArray[r][c] == '-') || (gridArray[r][c] == '|') || ((r%2==0))&& ((c%2==0)) || ((r%2==1)&&(c%2==1)) );
            for(int i=0 ; i<n ; i++ ) {
                    for(int j=0 ; j<n ; j++) {
                        if (r == i && c == j) {
                            if (i%2 == 0 && j%2 == 1) {  //assign the true line in the memory
                                gridArray[r][c] = '-';
                    }
                            else if (i%2 == 1 && j%2 == 0) {
                                gridArray[r][c] = '|';
                    }
                }
            }
        }

        }


       count ++ ;
      if(gridArray[r][c]=='|'){  //checks if the last vertical line drawn made a box or not
            if((gridArray[r][c+2]=='|')&&(gridArray[r+1][c+1]=='-')&&(gridArray[r-1][c+1]=='-')&&(gridArray[r][c-2]=='|')&&(gridArray[r-1][c-1]=='-')&&(gridArray[r+1][c-1]=='-')){
                count++;   // if any player drew a box he will continue playing until he did not drew a box so count will remain even or odd

                if(count % 2 == 0){
                    p1.score+=2;
                    printf("%c",gridArray[r][c+1] = '1');
                    printf("%c",gridArray[r][c-1] = '1');
                }
                else{
                    comp.score+=2 ;
                    printf("%c",gridArray[r][c+1] = 'c');
                    printf("%c",gridArray[r][c-1] = 'c');

                }

            }else if((gridArray[r][c+2]=='|')&&(gridArray[r+1][c+1]=='-')&&(gridArray[r-1][c+1]=='-')){
                count++;
                if(count % 2 == 0){
                    p1.score++;
                    printf("%c",gridArray[r][c+1] = '1');
                }
                else{
                    comp.score++ ;
                    printf("%c",gridArray[r][c+1] = 'c');
                }

            }else if((gridArray[r][c-2]=='|')&&(gridArray[r-1][c-1]=='-')&&(gridArray[r+1][c-1]=='-')){
                count++;
                if(count % 2 == 0){
                    p1.score+=1;

                    printf("%c",gridArray[r][c-1] = '1');
                }
                else{
                    comp.score++;
                    printf("%c",gridArray[r][c-1] = 'c');
                }

               }
      }else if(gridArray[r][c]=='-'){   //checks if the last horzintal line drawn made a box or not
            if((gridArray[r+2][c]=='-')&&(gridArray[r-2][c]=='-')&&(gridArray[r+1][c+1]=='|')&&(gridArray[r+1][c-1]=='|')&&(gridArray[r-1][c+1]=='|')&&(gridArray[r-1][c-1]=='|')){
                count++;
                if(count % 2 == 0){
                    p1.score+=2;

                    printf("%c",gridArray[r+1][c] = '1');
                    printf("%c",gridArray[r-1][c] = '1');
                }
                else{
                    comp.score+=2;
                    printf("%c",gridArray[r+1][c] = 'c');
                    printf("%c",gridArray[r-1][c] = 'c');

                }
            }

            else if((gridArray[r+2][c]=='-')&&(gridArray[r+1][c+1]=='|')&&(gridArray[r+1][c-1]=='|')){

                count++;
                if(count % 2 == 0){
                    p1.score+=1;
                    printf("%c",gridArray[r+1][c] = '1');
                }
                else{
                    comp.score++ ;
                    printf("%c",gridArray[r+1][c] = 'c');
                }
            }
            else if((gridArray[r-2][c]=='-')&&(gridArray[r-1][c+1]=='|')&&(gridArray[r-1][c-1]=='|')){
                count++;
                if(count % 2 == 0){
                    p1.score++;
                    printf("%c",gridArray[r-1][c] = '1');
                }
                else{
                    comp.score++ ;
                    printf("%c",gridArray[r-1][c] = 'c');
                }
            }
      }
        system("cls");
        if (gamemode == 1) {
            printf("\t\t\t     0 1 2 3 4\n");
        }
        else if (gamemode == 2) {
            printf("\t\t\t     0 1 2 3 4 5 6 7 8 9 10\n");
        }
        for (int i=0 ; i<n ; i++) {
            if (i != 10) {
                printf("\t\t\t%d    ",i);
            }
            else if (i == 10) {
                printf("\t\t       %d    ",i);
            }
            for (int j=0 ; j<n ; j++) {
                printf("%c ",gridArray[i][j]);
            }
            printf("\n");
        }
        printf("\n");
            printf("\n\nPlayer1 score : %d\tcomputer score: %d\n\n\n",p1.score,comp.score);
            if(i == m-1){
                if(p1.score > comp.score){
                    printf("Player 1 is the winner. \n\n\n\n");
                }
                else if(p1.score < comp.score){
                    printf("Computer is the winner. \n\n\n\n");
                }
                else{
                    printf("The game is draw. \n\n\n\n");

                }
            }

    }

}

int main()
{
    computer() ;
    return 0;
}





